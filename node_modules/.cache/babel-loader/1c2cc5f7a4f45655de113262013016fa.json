{"ast":null,"code":"var _jsxFileName = \"/Users/allison/Documents/repos/portfolio/src/components/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from '../styles/accordion.module.scss';\nimport arrowUp from '../images/icons/arrow-up-thin.svg';\nimport arrowDown from '../images/icons/arrow-down-thin.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccordionHeader() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false); // toggle the state of the accordion, triggered onClick\n\n  function handleToggle() {\n    setIsOpen(!isOpen);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.accordionHeader,\n    onClick: () => {\n      handleToggle();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Section Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isOpen ? arrowUp : arrowDown,\n      alt: \"accordion open/close icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AccordionHeader, \"wI4RD8C1tVsUvnhO13IbxY3XhiQ=\");\n\n_c = AccordionHeader;\n;\nexport default AccordionHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionHeader\");","map":{"version":3,"sources":["/Users/allison/Documents/repos/portfolio/src/components/Accordion.js"],"names":["React","useState","styles","arrowUp","arrowDown","AccordionHeader","isOpen","setIsOpen","handleToggle","accordionHeader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;;AAGA,SAASC,eAAT,GAA2B;AAAA;;AAEvB,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC,CAFuB,CAIvB;;AACA,WAASO,YAAT,GAAwB;AACpBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;;AAAA;AAED,sBACQ;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACO,eAAvB;AACA,IAAA,OAAO,EAAE,MAAM;AAAED,MAAAA,YAAY;AAAI,KADjC;AAAA,4BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,GAAG,EAAGF,MAAM,GAAGH,OAAH,GAAaC,SAA9B;AAA0C,MAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AASH;;GAlBQC,e;;KAAAA,e;AAkBR;AAED,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from '../styles/accordion.module.scss';\nimport arrowUp from '../images/icons/arrow-up-thin.svg';\nimport arrowDown from '../images/icons/arrow-down-thin.svg';\n\n\nfunction AccordionHeader() {\n\n    const [ isOpen, setIsOpen ] = useState(false);\n    \n    // toggle the state of the accordion, triggered onClick\n    function handleToggle() {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n            <div className={styles.accordionHeader}\n            onClick={() => { handleToggle() } }>\n                {/* needs to take the section title passed from the specific Accordion (design, etc) and display it as a title */}\n                <h2>Section Name</h2>\n                <img src={ isOpen ? arrowUp : arrowDown } alt=\"accordion open/close icon\" />\n               \n            </div> \n    )\n};\n\nexport default AccordionHeader;"]},"metadata":{},"sourceType":"module"}