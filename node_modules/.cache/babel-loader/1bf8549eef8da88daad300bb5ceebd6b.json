{"ast":null,"code":"var _jsxFileName = \"/Users/allison/Documents/repos/portfolio/src/pages/PageProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SkipNavLink, SkipNavContent } from \"@reach/skip-nav\";\nimport \"@reach/skip-nav/styles.css\";\nimport styles from '../styles/pageProject.module.scss'; //import classes from 'classnames';\n\nimport NavMenu from '../components/NavMenu';\nimport Button from '../components/Button';\nimport FeatureCard from '../components/FeatureCard';\nimport Accordion from '../components/Accordion';\nimport PreviousNext from '../components/PreviousNext';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageProject() {\n  _s();\n\n  window.scrollTo(0, 0);\n  const {\n    id\n  } = useParams();\n  const restPath = 'https://atredwell.com/portfolio/wp-json/wp/v2/portfolio-project?acf_format=standard';\n  const [restData, setData] = useState([]);\n  const [isLoaded, setLoadStatus] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(restPath);\n\n      if (response.ok) {\n        const data = await response.json();\n        setData(data);\n        setLoadStatus(false);\n      } else {\n        setLoadStatus(false);\n      }\n    };\n\n    fetchData();\n  }, [restPath]);\n\n  if (isLoaded) {\n    var currentProjObj;\n    var currentProjIndex;\n    var prevID;\n    var nextID;\n    var prevLabel = 'previous';\n    var nextLabel = 'next';\n\n    function findProject() {\n      //findProject finds the current project in the array of all projects, and sets data for prev and next navigation component\n      //find and set the current project data\n      for (var i = 0; i < restData.length; i++) {\n        //id is a string, so the project ID also needs to be a string for comparison\n        var projIDstr = restData[i].id.toString();\n\n        if (projIDstr === id) {\n          currentProjObj = restData[i];\n          currentProjIndex = i;\n        }\n\n        ;\n      }\n\n      ; //set the previous and next data, accounting for when the current project is the first or last in the list\n      //if no custom label exists, then the default labels will apply\n\n      if (currentProjIndex === 0) {\n        prevID = restData[restData.length - 1].id;\n        nextID = restData[1].id;\n        restData[restData.length - 1].acf.label && (prevLabel = restData[restData.length - 1].acf.label);\n        restData[1].acf.label && (nextLabel = restData[1].acf.label);\n      } else if (currentProjIndex === restData.length - 1) {\n        nextID = restData[0].id;\n        prevID = restData[currentProjIndex - 1].id;\n        restData[0].acf.label && (nextLabel = restData[0].acf.label);\n        restData[currentProjIndex - 1].acf.label && (prevLabel = restData[currentProjIndex - 1].acf.label);\n      } else {\n        prevID = restData[currentProjIndex - 1].id;\n        nextID = restData[currentProjIndex + 1].id;\n        restData[currentProjIndex - 1].acf.label && (prevLabel = restData[currentProjIndex - 1].acf.label);\n        restData[currentProjIndex + 1].acf.label && (nextLabel = restData[currentProjIndex + 1].acf.label);\n      }\n\n      ;\n    }\n\n    ;\n    findProject();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(SkipNavLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SkipNavContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.marginWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: currentProjObj.title.rendered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.infoWrap,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentProjObj.acf.cover_image.url,\n              alt: currentProjObj.acf.cover_image.alt,\n              className: styles.projectCoverImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: styles.projectInfo,\n              children: [currentProjObj.acf.project_overview_content && /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Project Overview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: currentProjObj.acf.project_overview_content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), currentProjObj.acf.role_content && /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: currentProjObj.acf.role_content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), currentProjObj.acf.languages_tools && /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Languages & Tools\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: currentProjObj.acf.languages_tools.map((oneRow, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: oneRow.tool\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), currentProjObj.acf.requirements && /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Requirements\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: currentProjObj.acf.requirements.map((oneRow, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: oneRow.requirement\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this), id !== \"45\" && /*#__PURE__*/_jsxDEV(Button, {\n                url: currentProjObj.acf.project_url,\n                btnText: \"Live Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), currentProjObj.acf.feature && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.marginWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.featureHeader,\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.features,\n            children: currentProjObj.acf.feature.map((oneRow, i) => /*#__PURE__*/_jsxDEV(FeatureCard, {\n              feature: oneRow\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.accordions,\n          children: [/*#__PURE__*/_jsxDEV(Accordion, {\n            section: \"process\",\n            project: currentProjObj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            section: \"design\",\n            project: currentProjObj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            section: \"development\",\n            project: currentProjObj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            section: \"conclusion\",\n            project: currentProjObj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PreviousNext, {\n          prevID: prevID,\n          prevLabel: prevLabel,\n          nextID: nextID,\n          nextLabel: nextLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this); // end return\n  } //end if (isLoaded)\n\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"./loading.gif\",\n    alt: \"Loading\",\n    className: \"loading\",\n    id: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 12\n  }, this);\n}\n\n_s(PageProject, \"Fnr5SXMsgEdBIcf2Rnn0/rOyiJo=\", false, function () {\n  return [useParams];\n});\n\n_c = PageProject;\n;\nexport default PageProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageProject\");","map":{"version":3,"sources":["/Users/allison/Documents/repos/portfolio/src/pages/PageProject.js"],"names":["React","useState","useEffect","useParams","SkipNavLink","SkipNavContent","styles","NavMenu","Button","FeatureCard","Accordion","PreviousNext","Footer","PageProject","window","scrollTo","id","restPath","restData","setData","isLoaded","setLoadStatus","fetchData","response","fetch","ok","data","json","currentProjObj","currentProjIndex","prevID","nextID","prevLabel","nextLabel","findProject","i","length","projIDstr","toString","acf","label","marginWrap","title","rendered","infoWrap","cover_image","url","alt","projectCoverImage","projectInfo","project_overview_content","role_content","languages_tools","map","oneRow","tool","requirements","requirement","project_url","feature","featureHeader","features","accordions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SkipNavLink, SkipNavContent } from \"@reach/skip-nav\";\nimport \"@reach/skip-nav/styles.css\";\nimport styles from '../styles/pageProject.module.scss';\n//import classes from 'classnames';\nimport NavMenu from '../components/NavMenu';\nimport Button from '../components/Button';\nimport FeatureCard from '../components/FeatureCard';\nimport Accordion from '../components/Accordion';\nimport PreviousNext from '../components/PreviousNext';\nimport Footer from '../components/Footer';\n\n\nfunction PageProject( ) {\n\n    window.scrollTo(0, 0);\n\n    const { id } = useParams();\n\n    const restPath = 'https://atredwell.com/portfolio/wp-json/wp/v2/portfolio-project?acf_format=standard'; \n    const [restData, setData] = useState([])\n    const [isLoaded, setLoadStatus] = useState(false)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(restPath);\n            if ( response.ok ) {\n                const data = await response.json();\n                setData(data);\n                setLoadStatus(false);\n            } else {\n                setLoadStatus(false);\n            }\n        }\n        fetchData()\n    }, [restPath]);\n\n  \n    \n    if ( isLoaded ) {\n\n        var currentProjObj;\n        var currentProjIndex;\n        var prevID;\n        var nextID;\n        var prevLabel = 'previous';\n        var nextLabel = 'next';\n\n        function findProject() {\n            //findProject finds the current project in the array of all projects, and sets data for prev and next navigation component\n            //find and set the current project data\n            for (var i=0; i < restData.length; i++) {\n                //id is a string, so the project ID also needs to be a string for comparison\n                var projIDstr = restData[i].id.toString();\n                if ( projIDstr === id ) {   \n                    currentProjObj = restData[i];\n                    currentProjIndex = i;\n                };\n            };\n            //set the previous and next data, accounting for when the current project is the first or last in the list\n            //if no custom label exists, then the default labels will apply\n            if (currentProjIndex === 0) {\n                prevID = restData[restData.length-1].id; \n                nextID = restData[1].id;\n                restData[restData.length-1].acf.label && (prevLabel = restData[restData.length-1].acf.label);\n                restData[1].acf.label && (nextLabel = restData[1].acf.label);\n            } else if (currentProjIndex === (restData.length-1)) {\n                nextID = restData[0].id;\n                prevID = restData[currentProjIndex - 1].id;\n                restData[0].acf.label && (nextLabel = restData[0].acf.label);\n                restData[currentProjIndex - 1].acf.label && (prevLabel = restData[currentProjIndex - 1].acf.label);\n            } else {\n                prevID = restData[currentProjIndex - 1].id;\n                nextID = restData[currentProjIndex + 1].id;\n                restData[currentProjIndex - 1].acf.label && (prevLabel = restData[currentProjIndex - 1].acf.label);\n                restData[currentProjIndex + 1].acf.label && (nextLabel = restData[currentProjIndex + 1].acf.label);\n            };\n        };\n\n        findProject();\n\n        return(\n            <div className='page-container' >\n                <SkipNavLink />\n                <NavMenu />\n                <SkipNavContent />\n                <div className='content-wrap' >\n                    <div className={styles.marginWrap}>\n                        <h1>{currentProjObj.title.rendered}</h1>\n                        <div className={styles.infoWrap}>\n                            <img src={currentProjObj.acf.cover_image.url} alt={currentProjObj.acf.cover_image.alt} className={styles.projectCoverImage}/>\n                            <section className={styles.projectInfo}>\n                                \n                                { currentProjObj.acf.project_overview_content &&\n                                <section>\n                                    <h2>Project Overview</h2>\n                                    <p>{currentProjObj.acf.project_overview_content}</p>\n                                </section>\n                                }\n\n                                { currentProjObj.acf.role_content &&\n                                <section>\n                                    <h3>Role</h3>\n                                    <p>{currentProjObj.acf.role_content}</p>\n                                </section>\n                                }\n\n                                { currentProjObj.acf.languages_tools &&\n                                <section>\n                                    <h3>Languages &amp; Tools</h3>\n                                    <ul>\n                                        {currentProjObj.acf.languages_tools.map((oneRow, i) => \n                                            <li key={i}>{oneRow.tool}</li>\n                                        )}\n                                    </ul>\n                                </section>\n                                }\n                            \n                                { currentProjObj.acf.requirements &&\n                                    <section>\n                                        <h3>Requirements</h3>\n                                        <ul>\n                                            {currentProjObj.acf.requirements.map((oneRow, i) => \n                                                <li key={i}>{oneRow.requirement}</li>\n                                            )}\n                                        </ul>\n                                    </section>\n                                }\n                                {/* Portfolio ID is \"45\", don't render a link to project on Portfolio page */}\n                                {(id !== \"45\") && <Button url={currentProjObj.acf.project_url} btnText=\"Live Project\" />}\n                            </section>\n                            \n                        </div>\n                    </div>  \n                    \n                    { currentProjObj.acf.feature &&    \n                        <section className={styles.marginWrap}>\n                            <h2 className={styles.featureHeader}>Features</h2>\n                            <div className={styles.features}>\n                                {currentProjObj.acf.feature.map((oneRow, i) => \n                                    <FeatureCard key={i} feature={oneRow}/>\n                                )}\n                            </div>\n                        </section>  \n                    }\n                    <div className={styles.accordions}>\n                        <Accordion section=\"process\" project={currentProjObj}/>\n                        <Accordion section=\"design\" project={currentProjObj}/>\n                        <Accordion section=\"development\" project={currentProjObj}/>\n                        <Accordion section=\"conclusion\" project={currentProjObj}/>\n                    </div>\n                    <PreviousNext prevID={prevID} prevLabel={prevLabel} nextID={nextID} nextLabel={nextLabel}/>\n                </div> {/* end content-wrap */}\n                \n                <Footer />\n            </div>\n        ); // end return\n    } //end if (isLoaded)\n    return <img src=\"./loading.gif\" alt=\"Loading\" className=\"loading\" id=\"loading\" />\n};\n\nexport default PageProject;"]},"metadata":{},"sourceType":"module"}